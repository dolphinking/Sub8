#!/usr/bin/env python

import traceback
from std_srvs.srv import Empty, EmptyResponse
from twisted.internet import defer, reactor
import txros
from sub8 import tx_sub
from sub8_ros_tools import rosmsg_to_numpy
import missions


@txros.util.cancellableInlineCallbacks
def run_mission(req, nh):
    try:
        sub = yield tx_sub.get_sub(nh)
        yield txros.util.wall_sleep(1.0)

        # == MISSION CODE HERE ===================
        ret = yield missions.align_channel.run(sub)
        if ret is None:
            print "Fuck"
            defer.returnValue(False)

        odom = yield sub.last_pose()
        rotation = rosmsg_to_numpy(odom.pose.pose.orientation)

        # Buoys are around 2m from the ground?
        #yield sub.to_height(2)

        yield missions.buoy.run(sub)

        yield sub.move.backward(1).go()
        yield sub.move.depth(1.5).go()
        yield sub.move.set_orientation(rotation).zero_roll_and_pitch().go()

        yield sub.move.forward(5).go()

        print "DONE"

    except Exception:
        traceback.print_exc()

    finally:
        defer.returnValue(EmptyResponse())

@txros.util.cancellableInlineCallbacks
def main():
    nh = yield txros.NodeHandle.from_argv('sub8_auto_mission')
    nh.advertise_service('/go_auto', Empty, lambda req: run_mission(req, nh))

def _start():
    task = main().addErrback(lambda fail: fail.trap(defer.CancelledError))

if __name__ == '__main__':
    reactor.callWhenRunning(_start)
    reactor.run()
